diff --git a/src/main.cpp b/src/main.cpp
index 201044c..fda138f 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -191,9 +191,6 @@ int main(int argc, char *argv[])
 {
     /* Initialization: gettext */
     setlocale(LC_ALL, "");
-#if QT_VERSION >= 0x050000
-    setlocale(LC_CTYPE, "C.UTF-8"); // Qt5: the strings returned by gettext() must be UTF-8
-#endif
     bindtextdomain(PACKAGE, localedir());
     textdomain(PACKAGE);
 
@@ -221,8 +218,11 @@ int main(int argc, char *argv[])
     qInstallMessageHandler(qt_msg_handler);
 #endif
     QApplication *qt_app = new QApplication(argc, argv, have_display);
+    // QApplication constructor resets the locale settings to the system default.
+    // We must now set LC_CTYPE to use UTF-8, so that gettext() returns properly-formatted strings
+    bool setlocale_success = setlocale(LC_CTYPE, "C.UTF-8") || setlocale(LC_CTYPE, "en_US.UTF-8") || setlocale(LC_CTYPE, "en_GB.UTF-8") || setlocale(LC_CTYPE, "UTF-8"); 
 #if QT_VERSION < 0x050000
-    QTextCodec::setCodecForCStrings(QTextCodec::codecForLocale()); // Qt4: necessary for i18n via gettext
+    QTextCodec::setCodecForCStrings(QTextCodec::codecForName("utf8")); // Qt4: necessary for i18n via gettext
 #endif
     QCoreApplication::setOrganizationName("Bino");
     QCoreApplication::setOrganizationDomain("bino3d.org");
@@ -384,6 +384,9 @@ int main(int argc, char *argv[])
     {
         return 1;
     }
+    if (!setlocale_success) {
+        msg::wrn(_("Failed to set LC_CTYPE to UTF-8, non-ASCII characters may appear wrong."));
+    }
     if (!log_file.value().empty())
     {
         logf = std::fopen(log_file.value().c_str(), "a");
