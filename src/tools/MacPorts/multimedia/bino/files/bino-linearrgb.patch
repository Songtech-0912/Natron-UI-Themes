diff --git a/src/video_output_opengl.fs.glsl b/src/video_output_opengl.fs.glsl
index 52863c1..717cec1 100644
--- a/src/video_output_opengl.fs.glsl
+++ b/src/video_output_opengl.fs.glsl
@@ -61,6 +61,19 @@ uniform float saturation;
 uniform float cos_hue;
 uniform float sin_hue;
 
+// convert nonlinear RGB to linear RGB
+vec3 rgbl(vec3 rgbn)
+{
+   return pow(rgbn, vec3(2.2,2.2,2.2));
+}
+
+// convert linear RGB to nonlinear RGB
+vec3 rgbn(vec3 rgbl)
+{
+   return pow(rgbl, vec3(1./2.2,1./2.2,1./2.2));
+}
+
+// convert nonlinear RGB to YUV
 #if defined(input_bgra32)
 vec3 rgb_to_yuv(vec3 rgb)
 {
@@ -72,6 +85,7 @@ vec3 rgb_to_yuv(vec3 rgb)
 }
 #endif
 
+// convert YUV to nonlinear RGB
 vec3 yuv_to_rgb(vec3 yuv)
 {
     // Values taken from http://www.fourcc.org/fccyvrgb.php
@@ -107,6 +121,18 @@ vec3 get_yuv_l(vec2 tex_coord)
 #endif
 }
 
+vec3 get_rgbl_l(vec2 tex_coord)
+{
+#if defined(input_bgra32)
+    return rgbl(texture2D(rgb_l, tex_coord).xyz);
+#elif defined(input_yuv420p)
+    return rgbl(yuv_to_rgb(vec3(
+            texture2D(y_l, tex_coord).x,
+            texture2D(u_l, tex_coord).x,
+            texture2D(v_l, tex_coord).x)));
+#endif
+}
+
 #if !defined(mode_onechannel)
 vec3 get_yuv_r(vec2 tex_coord)
 {
@@ -119,6 +145,18 @@ vec3 get_yuv_r(vec2 tex_coord)
             texture2D(v_r, tex_coord).x);
 # endif
 }
+
+vec3 get_rgbl_r(vec2 tex_coord)
+{
+# if defined(input_bgra32)
+    return rgbl(texture2D(rgb_r, tex_coord).xyz);
+# elif defined(input_yuv420p)
+    return rgbl(vec3(
+            texture2D(y_r, tex_coord).x,
+            texture2D(u_r, tex_coord).x,
+            texture2D(v_r, tex_coord).x));
+# endif
+}
 #endif
 
 void main()
@@ -145,51 +183,51 @@ void main()
 # if defined(mode_even_odd_rows)
     if (m > 0.5)
     {
-        vec3 yuv0 = get_yuv_l(gl_TexCoord[0].xy - vec2(0.0, step_y));
-        vec3 yuv1 = get_yuv_l(gl_TexCoord[0].xy);
-        vec3 yuv2 = get_yuv_l(gl_TexCoord[0].xy + vec2(0.0, step_y));
-        rgb = yuv_to_rgb(adjust_yuv((yuv0 + 2.0 * yuv1 + yuv2) / 4.0));
+        vec3 rgb0 = get_rgbl_l(gl_TexCoord[0].xy - vec2(0.0, step_y));
+        vec3 rgb1 = get_rgbl_l(gl_TexCoord[0].xy);
+        vec3 rgb2 = get_rgbl_l(gl_TexCoord[0].xy + vec2(0.0, step_y));
+        rgb = yuv_to_rgb(adjust_yuv(rgb_to_yuv(rgbn((rgb0 + 2.0 * rgb1 + rgb2) / 4.0))));
     }
     else
     {
-        vec3 yuv0 = get_yuv_r(gl_TexCoord[0].xy - vec2(0.0, step_y));
-        vec3 yuv1 = get_yuv_r(gl_TexCoord[0].xy);
-        vec3 yuv2 = get_yuv_r(gl_TexCoord[0].xy + vec2(0.0, step_y));
-        rgb = yuv_to_rgb(adjust_yuv((yuv0 + 2.0 * yuv1 + yuv2) / 4.0));
+        vec3 rgb0 = get_rgbl_r(gl_TexCoord[0].xy - vec2(0.0, step_y));
+        vec3 rgb1 = get_rgbl_r(gl_TexCoord[0].xy);
+        vec3 rgb2 = get_rgbl_r(gl_TexCoord[0].xy + vec2(0.0, step_y));
+        rgb = yuv_to_rgb(adjust_yuv(rgb_to_yuv(rgbn((rgb0 + 2.0 * rgb1 + rgb2) / 4.0))));
     }
 # elif defined(mode_even_odd_columns)
     if (m > 0.5)
     {
-        vec3 yuv0 = get_yuv_l(gl_TexCoord[0].xy - vec2(step_x, 0.0));
-        vec3 yuv1 = get_yuv_l(gl_TexCoord[0].xy);
-        vec3 yuv2 = get_yuv_l(gl_TexCoord[0].xy + vec2(step_x, 0.0));
-        rgb = yuv_to_rgb(adjust_yuv((yuv0 + 2.0 * yuv1 + yuv2) / 4.0));
+        vec3 rgb0 = get_rgbl_l(gl_TexCoord[0].xy - vec2(step_x, 0.0));
+        vec3 rgb1 = get_rgbl_l(gl_TexCoord[0].xy);
+        vec3 rgb2 = get_rgbl_l(gl_TexCoord[0].xy + vec2(step_x, 0.0));
+        rgb = yuv_to_rgb(adjust_yuv(rgb_to_yuv(rgbn((rgb0 + 2.0 * rgb1 + rgb2) / 4.0))));
     }
     else
     {
-        vec3 yuv0 = get_yuv_r(gl_TexCoord[0].xy - vec2(step_x, 0.0));
-        vec3 yuv1 = get_yuv_r(gl_TexCoord[0].xy);
-        vec3 yuv2 = get_yuv_r(gl_TexCoord[0].xy + vec2(step_x, 0.0));
-        rgb = yuv_to_rgb(adjust_yuv((yuv0 + 2.0 * yuv1 + yuv2) / 4.0));
+        vec3 rgb0 = get_rgbl_r(gl_TexCoord[0].xy - vec2(step_x, 0.0));
+        vec3 rgb1 = get_rgbl_r(gl_TexCoord[0].xy);
+        vec3 rgb2 = get_rgbl_r(gl_TexCoord[0].xy + vec2(step_x, 0.0));
+        rgb = yuv_to_rgb(adjust_yuv(rgb_to_yuv(rgbn((rgb0 + 2.0 * rgb1 + rgb2) / 4.0))));
     }
 # elif defined(mode_checkerboard)
     if (m > 0.5)
     {
-        vec3 yuv0 = get_yuv_l(gl_TexCoord[0].xy - vec2(0.0, step_y));
-        vec3 yuv1 = get_yuv_l(gl_TexCoord[0].xy - vec2(step_x, 0.0));
-        vec3 yuv2 = get_yuv_l(gl_TexCoord[0].xy);
-        vec3 yuv3 = get_yuv_l(gl_TexCoord[0].xy + vec2(step_x, 0.0));
-        vec3 yuv4 = get_yuv_l(gl_TexCoord[0].xy + vec2(0.0, step_y));
-        rgb = yuv_to_rgb(adjust_yuv((yuv0 + yuv1 + 4.0 * yuv2 + yuv3 + yuv4) / 8.0));
+        vec3 rgb0 = get_rgbl_l(gl_TexCoord[0].xy - vec2(0.0, step_y));
+        vec3 rgb1 = get_rgbl_l(gl_TexCoord[0].xy - vec2(step_x, 0.0));
+        vec3 rgb2 = get_rgbl_l(gl_TexCoord[0].xy);
+        vec3 rgb3 = get_rgbl_l(gl_TexCoord[0].xy + vec2(step_x, 0.0));
+        vec3 rgb4 = get_rgbl_l(gl_TexCoord[0].xy + vec2(0.0, step_y));
+        rgb = yuv_to_rgb(adjust_yuv(rgb_to_yuv(rgbn((rgb0 + rgb1 + 4.0 * rgb2 + rgb3 + rgb4) / 8.0))));
     }
     else
     {
-        vec3 yuv0 = get_yuv_r(gl_TexCoord[0].xy - vec2(0.0, step_y));
-        vec3 yuv1 = get_yuv_r(gl_TexCoord[0].xy - vec2(step_x, 0.0));
-        vec3 yuv2 = get_yuv_r(gl_TexCoord[0].xy);
-        vec3 yuv3 = get_yuv_r(gl_TexCoord[0].xy + vec2(step_x, 0.0));
-        vec3 yuv4 = get_yuv_r(gl_TexCoord[0].xy + vec2(0.0, step_y));
-        rgb = yuv_to_rgb(adjust_yuv((yuv0 + yuv1 + 4.0 * yuv2 + yuv3 + yuv4) / 8.0));
+        vec3 rgb0 = get_rgbl_r(gl_TexCoord[0].xy - vec2(0.0, step_y));
+        vec3 rgb1 = get_rgbl_r(gl_TexCoord[0].xy - vec2(step_x, 0.0));
+        vec3 rgb2 = get_rgbl_r(gl_TexCoord[0].xy);
+        vec3 rgb3 = get_rgbl_r(gl_TexCoord[0].xy + vec2(step_x, 0.0));
+        vec3 rgb4 = get_rgbl_r(gl_TexCoord[0].xy + vec2(0.0, step_y));
+        rgb = yuv_to_rgb(adjust_yuv(rgb_to_yuv(rgbn((rgb0 + rgb1 + 4.0 * rgb2 + rgb3 + rgb4) / 8.0))));
     }
 # endif
 
