diff --git a/src/video_output.cpp b/src/video_output.cpp
index 05a8fe6..4c06ff2 100644
--- a/src/video_output.cpp
+++ b/src/video_output.cpp
@@ -341,23 +341,42 @@ video_output::~video_output()
  */
 bool video_output::xglCheckError(const std::string& where) const
 {
+    // http://www.opengl.org/sdk/docs/man4/xhtml/glGetError.xml
     GLenum e = glGetError();
     if (e != GL_NO_ERROR) {
         std::string pfx = (where.length() > 0 ? where + ": " : "");
-        throw exc(pfx + str::asprintf(_("OpenGL error 0x%04X."), static_cast<unsigned int>(e)));
+        std::string what = pfx + str::asprintf(_("OpenGL error 0x%04X."), static_cast<unsigned int>(e));
         // Don't use gluErrorString(e) here to avoid depending on libGLU just for this
-        return false;
+        if (e == GL_OUT_OF_MEMORY) {
+            throw exc(what);
+            return false;
+        }
+        msg::wrn(what.c_str());
+        if (e == GL_INVALID_FRAMEBUFFER_OPERATION) {
+            xglCheckFBO(where);
+        }
     }
     return true;
 }
 
 bool video_output::xglCheckFBO(const std::string& where) const
 {
+    // http://www.opengl.org/sdk/docs/man4/xhtml/glCheckFramebufferStatus.xml
     GLenum e = glCheckFramebufferStatusEXT(GL_FRAMEBUFFER_EXT);
     if (e != GL_FRAMEBUFFER_COMPLETE_EXT) {
         std::string pfx = (where.length() > 0 ? where + ": " : "");
-        throw exc(pfx + str::asprintf(_("OpenGL Framebuffer status error 0x%04X."), static_cast<unsigned int>(e)));
-        return false;
+        std::string what = pfx + str::asprintf(_("OpenGL Framebuffer status error 0x%04X."), static_cast<unsigned int>(e));
+        if (e == GL_FRAMEBUFFER_UNDEFINED) {
+            // This error is sometimes return on the Mac, probably due to a bug in Qt or the OpenGL driver:
+            // http://lists.qt.nokia.com/pipermail/qt-interest/2011-August/035500.html
+            // http://stackoverflow.com/questions/9986826/glclear-fails-with-gl-framebuffer-undefined
+            // http://www.gamedev.net/topic/608990-invalid-framebuffer-operation/
+            // https://discussions.apple.com/message/16026087
+            msg::wrn(what.c_str());
+        } else {
+            throw exc(what);
+            return false;
+        }
     }
     return true;
 }
