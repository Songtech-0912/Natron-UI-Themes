diff --git a/src/video_output_opengl.cpp b/src/video_output_opengl.cpp
index 4871dee..144f7f8 100644
--- a/src/video_output_opengl.cpp
+++ b/src/video_output_opengl.cpp
@@ -386,13 +386,13 @@ void video_output_opengl::display(bool toggle_swap_eyes, float x, float y, float
     {
         std::swap(left, right);
     }
-    int viewport[4];
-    glGetIntegerv(GL_VIEWPORT, viewport);
-    if ((_mode == even_odd_rows || _mode == checkerboard) && (screen_pos_y() + viewport[1]) % 2 == 0)
+    //int viewport[4];
+    //glGetIntegerv(GL_VIEWPORT, viewport);
+    if ((_mode == even_odd_rows || _mode == checkerboard) && (screen_pos_y() + _viewport[1]) % 2 == 0)
     {
         std::swap(left, right);
     }
-    if ((_mode == even_odd_columns || _mode == checkerboard) && (screen_pos_x() + viewport[0]) % 2 == 1)
+    if ((_mode == even_odd_columns || _mode == checkerboard) && (screen_pos_x() + _viewport[0]) % 2 == 1)
     {
         std::swap(left, right);
     }
@@ -470,7 +470,7 @@ void video_output_opengl::display(bool toggle_swap_eyes, float x, float y, float
         draw_quad(-1.0f, +1.0f, +2.0f, -2.0f);
     }
     glBindFramebufferEXT(GL_FRAMEBUFFER_EXT, 0);
-    glViewport(viewport[0], viewport[1], viewport[2], viewport[3]);
+    glViewport(_viewport[0], _viewport[1], _viewport[2], _viewport[3]);
     glMatrixMode(GL_PROJECTION);
     glPopMatrix();
     glMatrixMode(GL_MODELVIEW);
@@ -492,8 +492,8 @@ void video_output_opengl::display(bool toggle_swap_eyes, float x, float y, float
     if (_mode == even_odd_rows || _mode == even_odd_columns || _mode == checkerboard)
     {
         glUniform1i(glGetUniformLocation(_render_prg, "mask_tex"), 2);
-        glUniform1f(glGetUniformLocation(_render_prg, "step_x"), 1.0f / static_cast<float>(viewport[2]));
-        glUniform1f(glGetUniformLocation(_render_prg, "step_y"), 1.0f / static_cast<float>(viewport[3]));
+        glUniform1f(glGetUniformLocation(_render_prg, "step_x"), 1.0f / static_cast<float>(_viewport[2]));
+        glUniform1f(glGetUniformLocation(_render_prg, "step_y"), 1.0f / static_cast<float>(_viewport[3]));
     }
 
     if (_mode == stereo)
@@ -508,8 +508,8 @@ void video_output_opengl::display(bool toggle_swap_eyes, float x, float y, float
     }
     else if (_mode == even_odd_rows || _mode == even_odd_columns || _mode == checkerboard)
     {
-        float vpw = static_cast<float>(viewport[2]);
-        float vph = static_cast<float>(viewport[3]);
+        float vpw = static_cast<float>(_viewport[2]);
+        float vph = static_cast<float>(_viewport[3]);
         glActiveTexture(GL_TEXTURE0);
         glBindTexture(GL_TEXTURE_2D, _srgb_tex[left]);
         if (left != right)
@@ -615,7 +615,11 @@ void video_output_opengl::reshape(int w, int h)
     int vp_y = (h - vp_h) / 2;
 
     // Setup viewport and save new size
-    glViewport(vp_x, vp_y, vp_w, vp_h);
+    //glViewport(vp_x, vp_y, vp_w, vp_h);
+    _viewport[0] = vp_x;
+    _viewport[1] = vp_y;
+    _viewport[2] = vp_w;
+    _viewport[3] = vp_h;
     if (!_state.fullscreen)
     {
         _win_width = w;
diff --git a/src/video_output_opengl.h b/src/video_output_opengl.h
index f21f9b1..4ffaf7a 100644
--- a/src/video_output_opengl.h
+++ b/src/video_output_opengl.h
@@ -72,7 +72,8 @@ private:
     bool _initialized;
     // XXX: Hack: work around broken SRGB texture implementations
     bool _srgb_textures_are_broken;
-
+    // OpenGL Viewport for drawing the video frame
+    GLint _viewport[4];
 protected:
     /* In a sub-class that provides an OpenGL context, call the following
      * initialization functions in the order in which they appear here.
