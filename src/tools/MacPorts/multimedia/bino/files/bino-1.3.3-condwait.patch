diff --git a/src/video_output_qt.cpp b/src/video_output_qt.cpp
index 2758455..7e8d9c5 100644
--- a/src/video_output_qt.cpp
+++ b/src/video_output_qt.cpp
@@ -100,7 +100,8 @@ void gl_thread::activate_next_frame()
     _wait_mutex.lock();
     _action_finished = false;
     _action_activate = true;
-    _wait_cond.wait(_wait_mutex);
+    while(_action_activate)
+        _wait_cond.wait(_wait_mutex);
     _action_finished = true;
     _wait_mutex.unlock();
 }
@@ -114,7 +115,8 @@ void gl_thread::prepare_next_frame(const video_frame &frame, const subtitle_box
     _next_frame = frame;
     _action_finished = false;
     _action_prepare = true;
-    _wait_cond.wait(_wait_mutex);
+    while(_action_prepare)
+        _wait_cond.wait(_wait_mutex);
     _action_finished = true;
     _wait_mutex.unlock();
 }
@@ -145,18 +147,22 @@ void gl_thread::run()
             // can only switch video frames every other output frame.
             if (dispatch::parameters().stereo_mode() != parameters::mode_alternating
                     || _display_frameno % 2 == 0) {
+                _wait_mutex.lock();
                 if (_action_activate) {
                     _vo_qt->video_output::activate_next_frame();
                     _action_activate = false;
                     _wait_cond.wake_one();
                     _redisplay = true;
                 }
+                _wait_mutex.unlock();
             }
+            _wait_mutex.lock();
             if (_action_prepare) {
                 _vo_qt->video_output::prepare_next_frame(_next_frame, _next_subtitle);
                 _action_prepare = false;
                 _wait_cond.wake_one();
             }
+            _wait_mutex.unlock();
             if (_w > 0 && _h > 0
                     && (_vo_qt->full_display_width() != _w
                         || _vo_qt->full_display_height() != _h)) {
@@ -193,10 +199,15 @@ void gl_thread::run()
         _render = false;
         _failure = true;
     }
+    _wait_mutex.lock();
     if (_action_activate || _action_prepare) {
-        while (!_action_finished)
+        while (!_action_finished) {
             _wait_cond.wake_one();
+            _wait_mutex.unlock();
+            _wait_mutex.lock();
+     }
     }
+    _wait_mutex.unlock();
     _vo_qt_widget->doneCurrent();
 }
 
