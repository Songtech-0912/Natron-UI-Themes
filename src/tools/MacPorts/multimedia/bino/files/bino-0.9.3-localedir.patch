diff --git a/Makefile.am b/Makefile.am
index 08d5164..05746c3 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -49,7 +49,8 @@ package-macosx:
 	$(INSTALL) -m 755 src/bino "$$BINO_APP/Contents/MacOS/Bino" && \
 	$(INSTALL) -m 644 $(top_srcdir)/pkg/macosx/Bino.icns "$$BINO_APP/Contents/Resources" && \
 	$(INSTALL) -m 644 $(top_srcdir)/pkg/macosx/Info.plist "$$BINO_APP/Contents" && \
-	$(INSTALL) -m 644 doc/bino.html "$$BINO_APP/Contents/Resources/Bino Help" && \
+	$(MAKE) -C doc install-dist_docDATA docdir="$$BINO_APP/Contents/Resources/Bino Help" && \
+	$(MAKE) -C po install-strip localedir="$$BINO_APP/Contents/Resources/locale" && \
 	macdeployqt "$$BINO_APP" && \
 	rm -rf Bino.app && \
 	ditto "$$BINO_APP" Bino.app && \
diff --git a/src/main.cpp b/src/main.cpp
index 3663b84..b967342 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -31,6 +31,10 @@
 # include <windows.h>
 #endif
 
+#ifdef __APPLE__
+#include <mach-o/dyld.h> // for _NSGetExecutablePath()
+#endif
+
 #include "gettext.h"
 #define _(string) gettext(string)
 
@@ -69,6 +73,43 @@ static const char *localedir()
     strcpy(backslash + 1, "..\\locale");
     return buffer;
 #else
+#ifdef __APPLE__
+    try {
+        static char buffer[PATH_MAX];
+        uint32_t buffersize = sizeof(buffer);
+        int32_t check = _NSGetExecutablePath(buffer,&buffersize);
+        if (check != 0)
+        {
+            throw 0;
+        }
+        char *pch = std::strrchr(buffer, '/');
+        if (pch == NULL)
+        {
+            throw 0;
+        }
+        *pch = 0;
+        pch = std::strrchr(buffer, '/');
+        if (pch == NULL)
+        {
+            throw 0;
+        }
+        // check that I'm an application
+        if (std::strncmp(pch, "/MacOS", 6) != 0)
+        {
+            throw 0;
+        }
+        const char *subdir = "/Resources/locale";
+        size_t subdirlen = std::strlen(subdir) + 1;
+        // check that there's enough room left
+        if(sizeof(buffer) - (buffer-pch) <= subdirlen)
+        {
+            throw 0;
+        }
+        std::strncpy(pch, subdir, subdirlen);
+        return buffer;
+    } catch (...) {
+    }
+#endif
     /* GNU/Linux and others: fixed directory defined by LOCALEDIR */
     return LOCALEDIR;
 #endif
