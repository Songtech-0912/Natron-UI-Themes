--- CMakeLists.txt.orig	2016-04-27 16:11:39.955400100 +0200
+++ CMakeLists.txt	2016-04-27 16:11:56.580400100 +0200
@@ -96,6 +96,9 @@
     # Qt5: this flag has changed from /Zc:wchar_t- in Qt4.X
     set(CMAKE_CXX_FLAGS "/Zc:wchar_t /GR /EHsc /DWIN32 /D_WINDOWS /D_SCL_SECURE_NO_WARNINGS")
 else()
+    if(MINGW)
+        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DWIN32 -D_WINDOWS")
+    endif()
     if(CMAKE_HOST_UNIX AND NOT CYGWIN)
         add_definitions(-fPIC)
         set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -fvisibility=hidden -Wno-strict-aliasing")
--- libshiboken/basewrapper.cpp.orig	2016-04-27 16:12:14.908525100 +0200
+++ libshiboken/basewrapper.cpp	2016-04-27 16:13:10.017900100 +0200
@@ -770,7 +770,7 @@
 Py_hash_t hash(PyObject* pyObj)
 {
     assert(Shiboken::Object::checkType(pyObj));
-    return reinterpret_cast<Py_hash_t>(pyObj);
+    return reinterpret_cast<uintptr_t>(pyObj);
 }
 
 static void setSequenceOwnership(PyObject* pyObj, bool owner)
--- tests/libsample/objecttype.h.orig	2016-04-27 16:14:19.455400100 +0200
+++ tests/libsample/objecttype.h	2016-04-27 16:15:04.564775100 +0200
@@ -70,7 +70,7 @@
     Str objectName() const;
     void setObjectName(const Str& name);
 
-    inline unsigned long identifier() const { return reinterpret_cast<unsigned long>(this); }
+    inline unsigned long identifier() const { return reinterpret_cast<uintptr_t>(this); }
 
     bool causeEvent(Event::EventType eventType);
 
--- tests/libsample/transform.cpp.orig	2016-04-27 16:15:17.611650100 +0200
+++ tests/libsample/transform.cpp	2016-04-27 16:15:49.142900100 +0200
@@ -27,7 +27,9 @@
 #ifdef _WIN32
 #include <math.h>
 #include <float.h>
+#ifndef __MINGW64_VERSION_MAJOR
 static inline bool isfinite(double a) { return _finite(a); }
+#endif
 #else
 #include <cmath>
 #endif
--- generator/shiboken2/overloaddata.cpp.orig	2016-04-27 16:16:09.346025100 +0200
+++ generator/shiboken2/overloaddata.cpp	2016-04-27 16:16:44.283525100 +0200
@@ -882,7 +882,7 @@
 
         s << "}" << endl;
     } else {
-        QString argId = QString("arg_%1").arg((ulong)this);
+        QString argId = QString("arg_%1").arg((uintptr_t)this);
         s << argId << ';' << endl;
 
         s << indent << '"' << argId << "\" [shape=\"plaintext\" style=\"filled,bold\" margin=\"0\" fontname=\"freemono\" fillcolor=\"white\" penwidth=1 ";
